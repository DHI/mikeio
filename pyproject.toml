[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build]
license-files = { paths = ["License.txt"] }

[tool.hatch.build.targets.sdist]
exclude = [
    "notebooks",
    "tests",
    "images",
    ".github",
    "docs",
    ".devcontainer",
    "*.md",
    "*.txt",
    ".gitattributes",
]

[project]
name = "mikeio"
version = "2.2.0"
dependencies = [
    "mikecore>=0.2.1",
    "numpy>=1.22.0",
    "pandas>=1.3",
    "matplotlib>=3.6.0",
    "scipy>=1.0",
    "PyYAML",
    "tqdm",
    "xarray",
]

authors = [
    { name = "Henrik Andersson", email = "jan@dhigroup.com" },
    { name = "Jesper Sandvig Mariegaard", email = "jem@dhigroup.com" },
]
description = "A package that uses the DHI dfs libraries to create, write and read dfs and mesh files."
license = "BSD-3-Clause"
readme = "README.md"
requires-python = ">=3.10"
classifiers = [
    "License :: OSI Approved :: BSD License",
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Science/Research",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Scientific/Engineering",
]

[project.optional-dependencies]
dev = [
    "pytest",
    "quarto-cli",
    "quartodoc==0.9.1",
    "shapely",
    "pyproj",
    "xarray",
    "netcdf4",
    "rasterio",
    "polars",
    "ruff==0.6.2",
    "mypy==1.11.1",
]

test = [
    "pytest",
    "pytest-cov",
    "xarray",
    "mypy==1.11.1",
    "shapely",
    "pyproj",
    "polars",
]

notebooks = [
    "nbformat",
    "nbconvert",
    "jupyter",
    "xarray",
    "netcdf4",
    "rasterio",
    "geopandas",
    "scikit-learn",
    "matplotlib",
    "folium",
    "mapclassify",
]

[project.urls]
"Homepage" = "https://github.com/DHI/mikeio"
"Bug Tracker" = "https://github.com/DHI/mikeio/issues"


[tool.ruff.lint]

# ignore long lines
ignore = ["E501", "E741"]

select = [
    "D100",
    "D101",
    "D102",
    "D103",
    "D202",
    "D212",
    "D413",
    "D415",
    "D417",
]

# Dfs1, Dfs2 and Dfs3

MIKE IO has a similar API for the three gridded dfs file types: Dfs1, Dfs2 and Dfs2. 

All Dfs classes (and the Dataset) class are representations of timeseries and 
share these properties: 

* items - a list of [`ItemInfo](ItemInfo) with name, type and unit of each item
* n_items - Number of items
* n_timesteps - Number of timesteps
* start_time - First time instance (as datetime)
* end_time - Last time instance (as datetime)
* deletevalue - File delete value (NaN value)


Dfs2
----

A dfs2 file is also called a grid series file. Values in a dfs2 file are ‘element based’, i.e. values are defined in the centre of each grid cell. 
The spatial information is available in the [`DataArray.geometry`](DataArray.geometry) attribute, which in the case of a Dfs2 file is a [`Grid2D`](Grid2D) geometry. 

```python
>>> import mikeio
>>> ds = mikeio.read("gebco_sound.dfs2")
>>> ds
<mikeio.Dataset>
Dimensions: (time:1, y:264, x:216)
Time: 2020-05-15 11:04:52 (time-invariant)
Items:
  0:  Elevation <Total Water Depth> (meter)
>>> ds.geometry
<mikeio.Grid2D>
x-axis: nx=216 points from x0=12.2021 to x1=13.0979 with dx=0.00416667
y-axis: ny=264 points from y0=55.2021 to y1=56.2979 with dy=0.00416667
Number of grid points: 57024
```


Dfs2 Example notebooks
----------------------
* [Dfs2-Bathymetry](https://nbviewer.jupyter.org/github/DHI/mikeio/blob/main/notebooks/Dfs2%20-%20Bathymetry.ipynb) - GEBCO NetCDF/xarray to dfs2 
* [Dfs2-Boundary](https://nbviewer.jupyter.org/github/DHI/mikeio/blob/main/notebooks/Dfs2%20-%20Boundary.ipynb) - Vertical transect dfs2, interpolation in time 
* [Dfs2-Export-to-netCDF](https://nbviewer.jupyter.org/github/DHI/mikeio/blob/main/notebooks/Dfs2%20-%20Export%20to%20netcdf.ipynb) Export dfs2 to NetCDF
* [Dfs2-GFS](https://nbviewer.jupyter.org/github/DHI/mikeio/blob/main/notebooks/Dfs2%20-%20Global%20Forecasting%20System.ipynb) - GFS NetCDF/xarray to dfs2
* [Dfs2-SST](https://nbviewer.jupyter.org/github/DHI/mikeio/blob/main/notebooks/Dfs2%20-%20Sea%20surface%20temperature.ipynb) - DMI NetCDF/xarray to dfs2 
* [Dfs2 | getting-started-with-mikeio](https://dhi.github.io/getting-started-with-mikeio/dfs2.html)


Grid2D
--------
```{eval-rst}
.. autoclass:: mikeio.Grid2D
	:members:
	:inherited-members:
```